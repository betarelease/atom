diff --git a/config/application.rb b/config/application.rb
index 7ee08b7..aa765c6 100644
--- a/config/application.rb
+++ b/config/application.rb
@@ -1,121 +1,124 @@
 require File.expand_path('../boot', __FILE__)
 
 require 'action_controller/railtie'
 require 'action_mailer/railtie'
 require_relative '../app/classes/log_formatter'
 
 if defined?(Bundler)
   # If you precompile assets before deploying to production, use this line
   Bundler.require(*Rails.groups(:assets => %w(development test)))
   # If you want your assets lazily compiled in production, use this line
   # Bundler.require(:default, :assets, Rails.env)
 end
 
 module LogbookWeb
   class Application < Rails::Application
     # Settings in config/environments/* take precedence over those specified here
 
     # Configure the default encoding used in templates for Ruby 1.9
     config.encoding = 'utf-8'
 
     # Important, do not change!
     config.time_zone = 'UTC'
 
     # Enable escaping HTML in JSON
     config.active_support.escape_html_entities_in_json = true
 
     # Enable the asset pipeline
     config.assets.enabled = true
 
     # Version of your assets, change this if you want to expire all your assets
     config.assets.version = '1.0'
 
     # Do not load whole application when rake assets:precompile is executed
     config.assets.initialize_on_precompile = false
 
     # Load code as needed
     config.eager_load = false
 
     # Define classes to eager load / autoload
     config.eager_load_paths << Rails.root.join('lib').to_s
 
     # Configure logging
     # log to the specified file and roll the logs daily.
-    config.logger = Logger.new("log/#{ENV['rails_env']}.log", 20, 100_000_000)
-    config.logger.formatter = LogFormatter.new
+    config.logger = RemoteSyslogLogger.new(ENV['papertrail_url'],
+                                           ENV['papertrail_port'],
+                                           :program => ENV['papertrail_program_name'])
+    # config.logger = Logger.new("log/#{ENV['rails_env']}.log", 20, 100_000_000)
+    # config.logger.formatter = LogFormatter.new
 
     # Configure Action Mailer
     config.action_mailer.default_url_options = {host: ENV['action_mailer_url']}
     config.action_mailer.raise_delivery_errors = true
     config.action_mailer.delivery_method = :smtp
     config.action_mailer.smtp_settings = {
         user_name: ENV['smtp_username'],
         password: ENV['smtp_password'],
         domain: 'glooko.com',
         address: ENV['smtp_host'],
         port: ENV['smtp_port'],
         authentication: :plain,
         enable_starttls_auto: true
     }
 
     config.redis_server = ENV['redis_uri']
     config.large_temp_storage = Pathname.new ENV['large_temp_storage']
 
     # Validic
     config.validic_client = {
         validic_organization_id: ENV['validic_organization_id'],
         validic_access_token: ENV['validic_access_token'],
         log_level: ENV['validic_log_level'].to_i, # 1 normal log, 2 debug log (adds JSON response to validic_worker.log)
         validic_supported_apps: {
             # keys are app subnames, values are names of Validic collections
             fitbit: %w(fitness routine weight biometrics),
             ihealth: %w(routine weight biometrics),
             jawbone_up: %w(fitness routine weight),
             withings: %w(routine weight biometrics),
             movesapp: %w(fitness routine),
             healthgraph: %w(fitness),
             strava: %w(fitness)
         }
     }
 
     # Singapore API
     config.singapore_client = {
         singapore_api_key: ENV['singapore_api_key'],
         singapore_server: ENV['singapore_server'],
         singapore_allowed_pro_connect_codes: %w(singaporepoc ktph aeras sghospital sgktph) # all letters must be lowercase
     }
 
     # Custom Flags default values
     config.custom_flags = {
         percents_above_threshold: 25,
         above_threshold_amount: 250,
         percents_below_threshold: 10,
         below_threshold_amount: 70,
         high_above_threshold_amount: 400,
         low_below_threshold_amount: 50,
     }
 
     # Preferences default values
     config.preference = {
         meter_units: 0,
         normal_glucose_min: 7000,
         before_meal_normal_glucose_max: 13000,
         after_meal_normal_glucose_max: 18000,
         breakfast_begin: Time.utc(1970, 1, 1, 5, 0, 0).to_i,
         lunch_begin: Time.utc(1970, 1, 1, 10, 0, 0).to_i,
         dinner_begin: Time.utc(1970, 1, 1, 15, 0, 0).to_i,
         midnight_snack_begin: Time.utc(1970, 1, 1, 21, 0, 0).to_i
     }
 
     config.generators do |g|
       g.test_framework :rspec,
                        fixtures: true,
                        view_specs: false,
                        helper_specs: false,
                        routing_specs: false,
                        controller_specs: true,
                        request_specs: false
       g.fixture_replacement :factory_girl, dir: 'spec/factories'
     end
   end
 end
