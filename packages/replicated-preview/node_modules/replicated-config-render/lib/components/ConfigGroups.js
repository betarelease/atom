'use strict';

var _ = require('lodash');
var React = require('react');

var ConfigGroup = require('./ConfigGroup');
var ConfigService = require('../services/ConfigService');

var ConfigGroups = React.createClass({
  displayName: 'ConfigGroups',

  handleGroupChange: function handleGroupChange(groupName, itemName, value, data) {
    if (this.props.handleChange) {
      this.props.handleChange(groupName, itemName, value, data);
    }
  },

  render: function render() {
    var groups = _(this.props.groups).map((function (group) {
      if (!_.isEmpty(group) && ConfigService.isEnabled(this.props.groups, group)) {
        return React.createElement(ConfigGroup, {
          key: group.name,
          groups: this.props.groups,
          group: group,
          handleChange: this.handleGroupChange.bind(this, group.name),
          onTestProc: this.props.onTestProc });
      }
    }).bind(this)).filter(_.negate(_.isEmpty)).value();

    return React.createElement(
      'div',
      { className: 'replicated-config' },
      groups
    );
  }
});

module.exports = ConfigGroups;
//# sourceMappingURL=ConfigGroups.js.map
