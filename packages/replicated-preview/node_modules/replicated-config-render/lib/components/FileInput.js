'use strict';

var _ = require('lodash');
var classNames = require('classnames');
var React = require('react');

var FileInput = React.createClass({
  displayName: 'FileInput',

  getInitialState: function getInitialState() {
    return {
      errText: ''
    };
  },

  handleOnChange: function handleOnChange(ev) {
    this.setState({ errText: '' });

    var files = [];
    var error;

    var done = _.after(ev.target.files.length, (function () {
      // this.refs.file.getDOMNode().value = '';
      if (error) {
        this.setState({ errText: error });
      } else if (this.props.onChange) {
        this.props.onChange(_.pluck(files, 'value'), _.pluck(files, 'data'));
      }
    }).bind(this));

    _.forEach(ev.target.files, function (file) {
      var reader = new FileReader();
      reader.onload = function () {
        var vals = reader.result.split(',');
        if (vals.length !== 2) {
          error = 'Invalid file data';
        } else {
          files.push({ value: file.name, data: vals[1] });
        }
        done();
      };
      reader.readAsDataURL(file);
    });
  },

  render: function render() {
    var classes = classNames(this.props.className, 'btn btn-default btn-file', {
      'readonly': this.props.readOnly === true,
      'disabled': this.props.disabled === true
    });

    var label;
    if (this.props.label) {
      label = this.props.label;
    } else if (this.props.multiple) {
      label = 'Choose files';
    } else {
      label = 'Choose file';
    }

    return React.createElement(
      'span',
      null,
      React.createElement(
        'span',
        { className: classes },
        React.createElement('i', { className: 'glyphicon glyphicon-file' }),
        ' ',
        label,
        React.createElement('input', {
          ref: 'file',
          type: 'file',
          name: this.props.name,
          className: 'form-control',
          onChange: this.handleOnChange,
          readOnly: this.props.readOnly,
          multiple: this.props.multiple,
          disabled: this.props.disabled })
      ),
      React.createElement(
        'small',
        { className: 'text-danger' },
        ' ',
        this.state.errText
      )
    );
  }
});

module.exports = FileInput;
//# sourceMappingURL=FileInput.js.map
