'use strict';

var _ = require('lodash');
var classNames = require('classnames');
var React = require('react');
var ReactDOM = require('react-dom');

var ConfigFieldCheckbox = React.createClass({
  displayName: 'ConfigFieldCheckbox',

  handleOnClick: function handleOnClick() {
    var node = ReactDOM.findDOMNode(this.refs.checkbox);
    node.checked = !node.checked;
    this.handleOnChange();
  },

  handleOnChange: function handleOnChange() {
    var val = ReactDOM.findDOMNode(this.refs.checkbox).checked ? '1' : '0';
    if (this.props.handleChange) {
      this.props.handleChange(this.props.name, val);
    }
  },

  render: function render() {
    var val = _.get(this.props, 'value', null);
    if (!val || val.length === 0) {
      val = this.props['default'];
    }
    var checked = val === '1';

    var inputClasses = classNames('btn', 'btn-default', 'btn-checkbox', {
      'active': checked,
      'readonly': this.props.readOnly
    });

    var iconClasses = classNames('fa', {
      'fa-check-square-o': checked,
      'fa-square-o': !checked
    });

    return React.createElement(
      'div',
      { className: 'field field-type-checkbox' },
      React.createElement(
        'div',
        { className: 'input input-type-checkbox' },
        React.createElement(
          'button',
          {
            type: 'button',
            disabled: this.props.readOnly,
            onClick: this.handleOnClick,
            className: inputClasses },
          React.createElement('i', { className: iconClasses }),
          ' ',
          this.props.title
        ),
        React.createElement('input', {
          ref: 'checkbox',
          type: 'checkbox',
          name: this.props.name,
          value: '1',
          checked: checked,
          onChange: this.handleOnChange,
          className: 'hidden' })
      )
    );
  }
});

module.exports = ConfigFieldCheckbox;
//# sourceMappingURL=ConfigFieldCheckbox.js.map
