{"version":3,"sources":["../../src/components/ConfigItem.js"],"names":[],"mappings":"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","file":"ConfigItem.js","sourcesContent":["var _ = require('lodash');\nvar classNames = require('classnames');\nvar React = require('react');\n\nvar ConfigItemTitle = require('./ConfigItemTitle');\n// var ConfigItemDescription = require('./ConfigItemDescription');\n// var ConfigGroupDescription = require('./ConfigGroupDescription');\nvar ConfigItemHelpText = require('./ConfigItemHelpText');\nvar ConfigTestWidget = require('./ConfigTestWidget');\n\nvar fields = {\n  'select': React.createFactory(require('./ConfigFieldSelect')),\n  'textarea': React.createFactory(require('./ConfigFieldTextArea')),\n  'text': React.createFactory(require('./ConfigFieldText')),\n  'password': React.createFactory(require('./ConfigFieldPassword')),\n  'file': React.createFactory(require('./ConfigFieldFile')),\n  'bool': React.createFactory(require('./ConfigFieldCheckbox')),\n  'select_one': React.createFactory(require('./ConfigFieldSelectOne')),\n  'select_many': React.createFactory(require('./ConfigFieldSelectMany')),\n  'label': React.createFactory(require('./ConfigFieldLabel')),\n  'heading': React.createFactory(require('./ConfigFieldHeading')),\n};\n\nvar ConfigItem = React.createClass({\n  handleItemChange: function(name, value, data) {\n    if (this.props.handleChange) {\n      this.props.handleChange(name, value, data);\n    }\n  },\n\n  render: function() {\n    var title = null;\n    var description = null;\n    var field = null;\n    var testWidget = null;\n\n    function getItemTestWidget(groups, item, onTestProc) {\n      if (_.get(item, 'test_proc.command', null) && item.test_proc.command.length > 0) {\n        // Item test proc will always have itself as the only argument\n        var argFields = [item.name];\n        return (\n          <div style={{marginTop: '10px'}}>\n            <ConfigTestWidget\n              boundItem={item.name}\n              groups={groups}\n              command={item.test_proc.command}\n              timeout={item.test_proc.timeout}\n              argFields={argFields}\n              displayName={item.test_proc.display_name}\n              onTestProc={onTestProc} />\n          </div>\n        );\n      }\n      return null;\n    }\n\n    if (this.props.item.type === 'label') {\n      title = (\n        <ConfigItemTitle title={this.props.item.title} />\n      );\n      /*\n      if (_.get(this.props.item, 'description', null) && this.props.item.description.length > 0) {\n        description = (\n          <ConfigItemDescription text={this.props.item.description} />\n        );\n      }\n      */\n    } else if (this.props.item.type === 'heading') {\n      title = (\n        <div className=\"config-group clearfix\">\n          <h3 className=\"group-title\">{this.props.item.title}</h3>\n        </div>\n      );\n      /*\n      if (_.get(this.props.item, 'description', null) && this.props.item.description.length > 0) {\n        description = (\n          <div className=\"row\">\n            <ConfigGroupDescription text={this.props.item.description} />\n          </div>\n        );\n      }\n      */\n    } else {\n      title = (\n        <ConfigItemTitle\n          title={this.props.item.title}\n          required={this.props.item.required === true}\n          recommended={this.props.item.recommended === true} />\n      );\n      /*\n      if (_.get(this.props.item, 'description', null) && this.props.item.description.length > 0) {\n        description = (\n          <ConfigItemDescription text={this.props.item.description} />\n        );\n      }\n      */\n      testWidget = getItemTestWidget(\n        this.props.groups,\n        this.props.item,\n        this.props.onTestProc\n      );\n    }\n\n    var props = {\n      title: title,\n      name: this.props.item.name,\n      value: this.props.item.value,\n      multi_value: this.props.item.multi_value,\n      default: this.props.item.default,\n      props: this.props.item.props,\n      readOnly: this.props.item.readonly === true,\n      multiple: this.props.item.multiple === true,\n      items: this.props.item.items || [],\n      handleChange: this.handleItemChange,\n    };\n\n    if (this.props.item.type in fields) {\n      field = fields[this.props.item.type](props);\n    } else if (this.props.item.type) {\n      // unknown field type\n      return null;\n    }\n\n    var helpText = null;\n    if (_.get(this.props.item, 'help_text', null) && this.props.item.help_text.length > 0) {\n      helpText = <ConfigItemHelpText text={this.props.item.help_text} />;\n    }\n\n    var classes = classNames('form-group col-xs-12', {\n      'col-sm-6': (\n        this.props.item.affix === 'left' ||\n        this.props.item.affix === 'right'\n      ),\n      'hidden': !this.props.visible,\n    });\n\n    return (\n      <div className={classes}>\n        {field}\n        {description}\n        {helpText}\n        {testWidget}\n      </div>\n    );\n  },\n});\n\nmodule.exports = ConfigItem;\n"]}