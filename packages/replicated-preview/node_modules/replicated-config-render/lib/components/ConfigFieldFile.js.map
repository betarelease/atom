{"version":3,"sources":["../../src/components/ConfigFieldFile.js"],"names":[],"mappings":";;AAAA,IAAI,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;AAC7B,IAAI,QAAQ,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;;AAEpC,IAAI,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;AAEvC,IAAI,eAAe,GAAG,KAAK,CAAC,WAAW,CAAC;;;AACtC,gBAAc,EAAE,wBAAS,KAAK,EAAE,IAAI,EAAE;AACpC,YAAQ,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC;AAChD,QAAI,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;AAC3B,UAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;AACvB,YAAI,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;OACvD,MAAM;AACL,YAAI,CAAC,KAAK,CAAC,YAAY,CACrB,IAAI,CAAC,KAAK,CAAC,IAAI,EACf,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE,EACrB,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,CACpB,CAAC;OACH;KACF;GACF;;AAED,kBAAgB,EAAE,4BAAW;AAC3B,QAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;AACvB,UAAI,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,EAAE;AAC3D,eAAO,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;OAC1C;KACF,MAAM,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;AAC3B,aAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;KACzB;AACD,WAAO,IAAI,CAAC,KAAK,WAAQ,CAAC;GAC3B;;AAED,QAAM,EAAE,kBAAW;AACjB,WACE;;QAAK,SAAS,EAAC,uBAAuB;MACpC;;;QAAQ,IAAI,CAAC,KAAK,CAAC,KAAK;OAAS;MACjC;;UAAK,SAAS,EAAC,gCAAgC;QAC7C;;;UACE;;;YACE,oBAAC,SAAS;AACR,iBAAG,EAAC,MAAM;AACV,kBAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,AAAC;AACtB,sBAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,AAAC;AAC9B,sBAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,AAAC;AAC9B,sBAAQ,EAAE,IAAI,CAAC,cAAc,AAAC,GAAG;WAC9B;UACP;;;YAAQ,IAAI,CAAC,gBAAgB,EAAE;WAAS;SACpC;OACF;KACF,CACN;GACH;CACF,CAAC,CAAC;;AAEH,MAAM,CAAC,OAAO,GAAG,eAAe,CAAC","file":"ConfigFieldFile.js","sourcesContent":["var React = require('react');\nvar ReactDOM = require('react-dom');\n\nvar FileInput = require('./FileInput');\n\nvar ConfigFieldFile = React.createClass({\n  handleOnChange: function(value, data) {\n    ReactDOM.findDOMNode(this.refs.file).value = '';\n    if (this.props.handleChange) {\n      if (this.props.multiple) {\n        this.props.handleChange(this.props.name, value, data);\n      } else {\n        this.props.handleChange(\n          this.props.name,\n          value ? value[0] : '',\n          data ? data[0] : ''\n        );\n      }\n    }\n  },\n\n  getFilenamesText: function() {\n    if (this.props.multiple) {\n      if (this.props.multi_value && this.props.multi_value.length) {\n        return this.props.multi_value.join(', ');\n      }\n    } else if (this.props.value) {\n      return this.props.value;\n    }\n    return this.props.default;\n  },\n\n  render: function() {\n    return (\n      <div className=\"field field-type-file\">\n        <label>{this.props.title}</label>\n        <div className=\"input input-type-file clearfix\">\n          <div>\n            <span>\n              <FileInput\n                ref=\"file\"\n                name={this.props.name}\n                readOnly={this.props.readonly}\n                multiple={this.props.multiple}\n                onChange={this.handleOnChange} />\n            </span>\n            <small>{this.getFilenamesText()}</small>\n          </div>\n        </div>\n      </div>\n    );\n  },\n});\n\nmodule.exports = ConfigFieldFile;\n"]}