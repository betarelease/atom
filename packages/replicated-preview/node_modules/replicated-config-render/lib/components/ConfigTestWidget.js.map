{"version":3,"sources":["../../src/components/ConfigTestWidget.js"],"names":[],"mappings":"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","file":"ConfigTestWidget.js","sourcesContent":["var _ = require('lodash');\nvar classNames = require('classnames');\nvar React = require('react');\n\nvar ConfigService = require('../services/ConfigService');\n\nvar MockRequest = function(callback) {\n  this.timeout = setTimeout(callback, 2000);\n};\n\nMockRequest.prototype.abort = function() {\n  clearTimeout(this.timeout);\n};\n\nvar ConfigTestWidget = React.createClass({\n  getInitialState: function() {\n    return {\n      'resultText': '',\n      'success': null,\n      'testing': false,\n    };\n  },\n\n  handleTest: function(ev) {\n    ev.preventDefault();\n\n    this.setState({\n      'testing': true,\n      'resultText': '',\n    });\n\n    if (this.pendingRequest) {\n      this.pendingRequest.abort();\n    }\n\n    var requestData = {\n      'bound_group': this.props.boundGroup,\n      'bound_item': this.props.boundItem,\n      'command': this.props.command,\n      'timeout': this.props.timeout || 0,\n      'arg_fields': this.getArgs(),\n    };\n\n    if (this.props.onTestProc) {\n      this.pendingRequest = this.props.onTestProc(requestData, function(success, resultText) {\n        this.pendingRequest = null;\n        this.setState({\n          'testing': false,\n          'success': success,\n          'resultText': resultText,\n        });\n      }.bind(this));\n    } else {\n      console.log('Running test proc', this.props.command, requestData); // eslint-disable-line no-console\n      this.pendingRequest = new MockRequest(function() {\n        this.setState({\n          'testing': false,\n          'success': true,\n          'resultText': 'Success',\n        });\n      }.bind(this));\n    }\n  },\n\n  getArgs: function() {\n    var args = [];\n    _.each(this.props.argFields, function(field) {\n      _.some(ConfigService.getItems(this.props.groups), function(item) {\n        if (item.name === field) {\n          // TODO: support multi value fields index\n          if (item.type === 'file') {\n            if (item.multiple) {\n              args.push({\n                field: item.name,\n                value: (\n                  item.multi_data && item.multi_data.length ?\n                  atob(item.multi_data[0]) :\n                  ''\n                ),\n              });\n            } else {\n              args.push({\n                field: item.name,\n                value: item.data ? atob(item.data) : '',\n              });\n            }\n          } else {\n            if (item.multiple) {\n              args.push({\n                field: item.name,\n                value: (\n                  item.multi_value && item.multi_value.length ?\n                  item.multi_value[0] :\n                  item.default\n                ),\n              });\n            } else {\n              args.push({\n                field: item.name,\n                value: item.value && item.value.length > 0 ? item.value : item.default,\n              });\n            }\n          }\n          return true;\n        }\n        return false;\n      });\n    }.bind(this));\n    return args;\n  },\n\n  render: function() {\n    var iconTesting = null;\n    var iconSuccess = null;\n    var iconFail = null;\n    if (this.state.testing === true) {\n      iconTesting = <i className=\"fa fa-cog fa-spin\"></i>;\n    } else {\n      if (this.state.success === true) {\n        iconSuccess = <i className=\"fa fa-check-square\"></i>;\n      }\n      if (this.state.success === false) {\n        iconFail = <i className=\"fa fa-times-circle\"></i>;\n      }\n    }\n\n    var statusClasses = classNames('test-status', {\n      'text-success': !this.state.testing && this.state.success === true,\n      'text-danger': !this.state.testing && this.state.success === false,\n    });\n\n    return (\n      <div className=\"test-widget clearfix\">\n        <div>\n          <span>\n            <a href=\"#\" onClick={this.handleTest} className=\"test-button btn btn-info btn-sm pull-left\">\n              {this.props.displayName ? this.props.displayName : 'Test'}\n            </a>\n          </span>\n          <small className={statusClasses}>{iconTesting} {iconSuccess} {iconFail} {this.state.resultText}</small>\n        </div>\n      </div>\n    );\n  },\n});\n\nmodule.exports = ConfigTestWidget;\n"]}