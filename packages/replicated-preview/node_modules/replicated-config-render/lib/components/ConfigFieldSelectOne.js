'use strict';

var _ = require('lodash');
var classNames = require('classnames');
var React = require('react');

var ConfigItemTitle = require('./ConfigItemTitle');
var ConfigFieldRadio = require('./ConfigFieldRadio');
var Compat = require('../services/Compat');

var ConfigFieldSelectOne = React.createClass({
  displayName: 'ConfigFieldSelectOne',

  handleItemChange: function handleItemChange(itemName, value) {
    if (value === '1' && this.props.handleChange) {
      this.props.handleChange(this.props.name, itemName);
    }
  },

  render: function render() {
    var options = [];
    _.each(this.props.items, (function (item) {
      if (!_.isEmpty(item)) {
        // TODO: does required make sense here?
        var title = React.createElement(ConfigItemTitle, {
          title: item.title,
          required: item.required === true,
          recommended: item.recommended === true });

        options.push(React.createElement(
          'div',
          {
            key: item.name + '-selectone',
            className: 'pull-left',
            style: { paddingRight: '10px' } },
          React.createElement(ConfigFieldRadio, {
            title: title,
            name: item.name,
            group: this.props.name,
            value: this.props.value,
            'default': this.props['default'],
            readOnly: this.props.readOnly,
            handleChange: this.handleItemChange })
        ));
      }
    }).bind(this));

    return React.createElement(
      'div',
      { className: 'field field-type-selectone' },
      React.createElement(
        'label',
        { className: classNames(Compat.hiddenClass('1.0.0')) },
        this.props.title
      ),
      React.createElement(
        'div',
        { className: 'input input-type-selectone clearfix' },
        options
      )
    );
  }
});

module.exports = ConfigFieldSelectOne;
//# sourceMappingURL=ConfigFieldSelectOne.js.map
