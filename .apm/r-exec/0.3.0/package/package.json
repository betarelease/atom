{"name":"r-exec","main":"./lib/r-exec","version":"0.3.0","description":"Send R code to various R consoles","activationCommands":{"atom-text-editor":["r-exec:send-command","r-exec:setwd"]},"repository":{"type":"git","url":"git+https://github.com/hafen/atom-r-exec.git"},"keywords":["R","code","run","runner"],"license":"MIT","engines":{"atom":">1.0.0"},"dependencies":{"node-osascript":"1.0.2"},"readme":"# r-exec\n\nSend R code from Atom to be executed in R.app, Terminal, iTerm, or a web browser running RStudio Server on Mac OS X.  The current selection is sent or in the case of no selection the current line is sent.\n\n## Installation\n\n`apm install r-exec`\n\nor\n\nSearch for `r-exec` within package search in the Settings View.\n\n## Configuration\n\n### Keybindings\n\nWhile `cmd-enter` is bound to sending code in the package, it is also annoyingly bound to entering a new line by default in atom.\nIn order to make it work, you must add the following binding in `~/.atom/keymap.cson`:\n\n```javascript\n'atom-workspace atom-text-editor':\n  'cmd-enter': 'r-exec:send-command'\n```\n\n### Behavior\n\nAll configuration can be done in the settings panel. Alternatively, you can edit your configuration file as noted below.\n\nIn your global configuration file (`~/.atom/init.coffee`), you may set the following variables:\n\n- `r-exec.whichApp` which R engine to use. Valid engines are:\n  - `R.app`: the default (the R GUI)\n  - `iTerm` or `Terminal`: Assumes the currently active terminal has R running\n  - `Safari` or `Google Chrome`: assumes the currently active tab has an active RStudio session running, with the console active\n- `r-exec.advancePosition`\n  - if `true`, go to the after running the current line\n  - if `false`, leave the cursor where it currently is\n- `r-exec.focusWindow`\n  - if `true`, focus the window before sending code\n  - if `false`, send the code in the background and stay focused on Atom. This is not possible when sending code to a browser\n\nThe default configuration looks like this:\n\n```javascript\natom.config.set('r-exec.whichApp', 'R.app')\natom.config.set('r-exec.advancePosition', false)\natom.config.set('r-exec.focusWindow', true)\n```\n\n## Usage\n\n- `cmd-enter`: send code to configured engine (`r-exec:whichEngine`)\n- `cmd-shift-e`: change to current working directory of current file\n\n## Notes\n\nThis is very much in an **alpha** state and is a quick hobby project.  It is currently Mac-only because these things are easy to do with AppleScript.  Any help on the Windows or Linux side would be great.\n\nIn the RStudio Server case, the solution is pretty clunky - the code is sent to the clipboard and then a paste command is sent to Safari.  But it works.\n\n## TODO\n\n- Make the choice of which R.app to send the code to configurable, based on a project-level configuration variable (sometimes multiple copies of R.app are made so that multiple R GUIs can be running simultaneously for different projects).\n- In RStudio Server case, make sure active window really is RStudio Server before pasting, maybe by checking the  [title](http://www.alfredforum.com/topic/2013-how-to-get-frontmost-tab's-url-and-title-of-various-browsers/).\n- Error reporting.\n- Support for Windows and Linux.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/hafen/atom-r-exec/issues"},"homepage":"https://github.com/hafen/atom-r-exec#readme","_id":"r-exec@0.3.0","_shasum":"d9bfe78dd5f3fd219ff90fa6b4ce3c21235be452","_resolved":"file:../d-115102-45238-120swgn/package.tgz","_from":"../d-115102-45238-120swgn/package.tgz"}