{"name":"debugger","main":"./lib/atom-node-debug","version":"0.4.5","description":"Debug javascript code from right within the editor: set breakpoints, step through code, inspect variable/expression values, etc.","keywords":["node","nodejs","debug","debugger","inspector","web inspector","node-inspector"],"activationEvents":["debugger:connect","debugger:toggle-debug-session"],"repository":{"type":"git","url":"https://github.com/anandthakker/atom-node-debug"},"license":"MIT","engines":{"atom":">0.129.0"},"dependencies":{"debug":"^2.0.0","mustache":"^0.8.2","node-inspector":"^0.7.4","q":"^1.0.1","request":"^2.44.0","text-buffer":"^3.2.7","underscore-plus":"^1.5.1","ws":"^0.4.32"},"devDependencies":{},"readme":"# Atom debugger package\n\nDebug javascript code from right within the editor: set breakpoints, step through code,\ninspect variables values.\n\nWe all love (and couldn't live without) the Chrome inspector, but sometimes you just don't want\nto open up your whole source tree in another browser.\n\n![](https://raw.githubusercontent.com/anandthakker/atom-node-debug/master/screenshot.gif)\n\n# Features\n- Step through (over, into, out) node code.\n- Navigate the call stack.\n- Inspect variable values.\n- Rudimentary console output.\n- Run debugger on current file, or attach to an existing `node --debug` session.\n- Attach to a `Chrome --remote-debugging-port` session to debug javascript running\n  in the browser.\n\n# Roadmap\n\n- [x] Ability to attach to Chrome debugger in addition to Node one.\n  - [ ] Follow-up: intelligently open *local* source files from current project, even\n        when they're being served via http.\n- [x] Open up a new tab when execution leaves current source.\n- [x] Persist breakpoints across debugger sessions.\n- [ ] Breakpoint list\n- [x] Variables\n- [ ] Structured console messages\n- [x] TESTS! (Although the underlying API has tests, the ui wiring doesn't.)\n- [x] Jump up and down the stack\n- [ ] Eval\n- [ ] Save and continue\n- [ ] Source maps (a.k.a. coffeescript support)\n\n# Theme/Style\n\nTake a look at [the stylesheet](/stylesheets/atom-node-debug.less).\n\nHaven't yet tested this on anything but the basic\ntheme, but heads up: it uses `darken()` to modify\ntheme background color variables for use as breakpoint\nand current line markers.  That means the default styles\nprobably work fine for dark themes, and less well for\nlight ones.\n\n# Advanced Usage\n\n## Arbitrary Node Inspectors\n\n```bash\n$ node-inspector\nNode Inspector v0.7.4\nVisit http://127.0.0.1:8080/debug?port=5858 to start debugging.\n```\n\nYou want the *front end* port--8080 in the example above.\n\n\n## Chrome\n**IN ALPHA**\n\n```bash\n$ Google\\\\ Chrome\\\\ Canary --remote-debugging-port=9222\n$ curl http://localhost:9222/json\n```\n```json\n[ {\n   \"description\": \"\",\n   \"devtoolsFrontendUrl\": \"/devtools/devtools.html?ws=localhost:9222/devtools/\n   page/4649D7AA-4AAC-4B2E-A86A-A3789FB3EC61\",\n   \"faviconUrl\": \"https://www.google.com/favicon.ico\",\n   \"id\": \"4649D7AA-4AAC-4B2E-A86A-A3789FB3EC61\",\n   \"title\": \"My Web Page!\",\n   \"type\": \"page\",\n   \"url\": \"http://mywebpage.com\",\n   \"webSocketDebuggerUrl\":\"ws://localhost:9222/devtools/page/4649D7AA-4AAC-4B2E-A86A-A3789FB3EC61\"\n}, ... ]\n```\n\nCoppy the `webSocketDebuggerUrl` starting with `ws://...`.\n\nThen use cmd-shift-P 'Debugger:Connect' (ctrl-opt-cmd-I by default) and paste in\nthe web socket url you just copied.\n\nOnce the debugger connects, it'll grab source files from Chrome and open them in\nthe editor.  Set breakpoints and reload the page to debug!\n\n\n# Contributing\n\nIssues and PR's welcome.\n\n# Thanks\n\n- [node-inspector][1]\n- [chromium][2]\n\n# License\n\n[MIT][3]\n\n\n[1]:https://github.com/node-inspector/node-inspector\n[2]:http://chromium.org\n[3]:https://github.com/anandthakker/atom-node-debug/blob/master/LICENSE.md\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/anandthakker/atom-node-debug/issues"},"homepage":"https://github.com/anandthakker/atom-node-debug","_id":"debugger@0.4.5","_shasum":"fa19d155fb449aacb26b4e3730d29cfb4620abac","_resolved":"file:../d-115210-75069-1natfq1/package.tgz","_from":"../d-115210-75069-1natfq1/package.tgz"}